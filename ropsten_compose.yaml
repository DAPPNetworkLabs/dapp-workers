version: "3"
services:
  ipfs0:
    container_name: ipfs0
    image: ipfs/go-ipfs:latest
    ports:
      - "4001:4001" 
      - "8080:8080"
    volumes:
      - ipfs-data:/data/ipfs
  eth:
    image: ethereum/client-go:latest
    # build: ethereum/client-go
    ports:
      - "8545:8545"
      - "8546"
      - "8547"
      - "30303"
    labels:
      kompose.service.type: LoadBalancer
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8545"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - keys:/keys
    entrypoint: ["geth", "--syncmode=light", "--ws", "--ropsten", "--http", "--http.addr=0.0.0.0", "--ws.addr=0.0.0.0"]
  orchestrator:
    image: orchestrator
    build: services/orchestrator
    environment:
      - SEED=cruel rebel frown short month love belt weather sense hood cage pact
      - ETH_ADDR=ws://eth:8545
      - COMPOSE_PROFILES
      - NODE_OPTIONS=--openssl-legacy-provider
      - ADDRESS=0xEdF6BAE9895941F2f386483640EA30bd71751d0A
      - DATABASE_URL=postgres://user:password@postgres:5432/orchestrator
      - DATABASE_NODE_ENV="production"
      - DATABASE_TIMEOUT=10000
    command: ["/bin/bash", "/app/orchestrator/wait-for-it.sh", "--timeout=60", "eth:8545", "--", "node", "./dist/index.js"]
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nexus:/nexus
    depends_on:
      - "eth"
    links:
      - eth
  dspportal:
    image: dspportal
    build: uis/jobs
    ports:
      - 8888:80
    depends_on:
      - "eth"
    links:
      - eth
    depends_on:
      - "eth"
    links:
      - eth
  postgres:
    image: postgres 
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: orchestrator
      PGDATA: /var/lib/postgresql/data/pgdata
volumes:
  keys:
    external: false
  pg-data:
    external: false
  ipfs-data:
    external: false
networks:
  bridge:
