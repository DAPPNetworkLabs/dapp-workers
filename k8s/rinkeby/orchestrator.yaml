apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: orchestrator
    product: dapp-workers
  name: orchestrator
spec:
  serviceName: "orchestrator"
  replicas: 1
  selector:
    matchLabels:
      app: orchestrator
  template:
    metadata:
      labels:
        app: orchestrator
        product: dapp-workers
    spec:
      serviceAccountName: orchestrator
      containers:
        - args:
            - /bin/bash
            - /app/orchestrator/wait-for-it.sh
            - --timeout=15
            - eth:8545
            - --
            - node
            - ./dist/index.js
          env:
            - name: ADDRESS
              value: TBD
            - name: DATABASE_NODE_ENV
              value: "production"
            - name: DATABASE_TIMEOUT
              value: "10000"
            - name: DATABASE_URL
              value: postgres://user:password@postgres:5432/orchestrator
            - name: ETH_ADDR
              value: ws://eth:8546
            - name: FROM_BLOCK
              value: "0"
            - name: NODE_OPTIONS
              value: --openssl-legacy-provider
            - name: SEED
              value: cruel rebel frown short month love belt weather sense hood cage pact
            - name: WORKER_AWS_KMS_ENABLED
              value: "false"
            - name: WORKER_EVM_GAS_LIMIT
              value: "10000000"
            - name: WORKER_EVM_GAS_PRICE
              value: "2000000000"
            - name: WORKER_EVM_MAX_FEE_PER_GAS
              value: "100000000000"
            - name: WORKER_EVM_MAX_PRIORITY_FEE_PER_GAS
              value: "3000000000"
            - name: DAPP_WORKERS_K8S
              value: "true"
            - name: NEXUS_PATH
              value: '/dapp-workers/nexus/artifacts/contracts/Nexus.sol/Nexus.json'
            - name: IPFS_HOST
              value: $IPFS_HOST
            # - name: WORKER_AWS_KMS_ACCESS_KEY_ID
            # - name: WORKER_AWS_KMS_ADDRESS
            #   value: 0x9d8e2c06e418e6c61785a7e4c65dd447ddc25aa0
            # - name: WORKER_AWS_KMS_ENABLED
            # - name: WORKER_AWS_KMS_KEY_ID
            # - name: WORKER_AWS_KMS_REGION
            # - name: WORKER_AWS_KMS_SECRET_ACCESS_KEY
          image: natpdev/orchestrator
          # imagePullPolicy: Never
          name: orchestrator
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /var/run/docker.sock:ro
              name: docker-sock
            - mountPath: /dapp-workers
              name: orchestrator-claim1
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: docker-sock
          hostPath:
            path: /k8s/var/run/docker.sock
        - name: orchestrator-claim1
          hostPath:
            path: /k8s/home/ubuntu/dapp-workers
            type: Directory
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: orchestrator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: modify-k8s
rules:
  - apiGroups: [""]
    resources: ["pods","services"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete","apply"]
  - apiGroups: ["apps"]
    resources: ["deployments","statefulsets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete","apply"]
  # - nonResourceURLs:
  #     - "/metrics"
  #   verbs:
  #     - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: modify-k8s-to-sa
subjects:
  - kind: ServiceAccount
    name: orchestrator
roleRef:
  kind: Role
  name: modify-k8s
  apiGroup: rbac.authorization.k8s.io
